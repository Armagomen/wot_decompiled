# Python bytecode 2.7 (decompiled from Python 2.7)
# Embedded file name: scripts/common/site-packages/Pympler-0.9/pympler/mprofile.py
import inspect
import sys
from pympler import muppy

class MProfiler(object):

    def __init__(self, codepoints=None, events=None):
        self.memories = {}
        self.codepoints = codepoints
        self.events = events

    def codepoint_included(self, codepoint):
        if self.codepoints is None:
            return True
        else:
            for cp in self.codepoints:
                mismatch = False
                for i in range(len(cp)):
                    if cp[i] is not None and cp[i] != codepoint[i]:
                        mismatch = True
                        break

                if not mismatch:
                    return True

            return False

    def profile(self, frame, event, arg):
        if self.events is None or event in self.events:
            frame_info = inspect.getframeinfo(frame)
            cp = (frame_info[0], frame_info[2], frame_info[1])
            if self.codepoint_included(cp):
                objects = muppy.get_objects()
                size = muppy.get_size(objects)
                if cp not in self.memories:
                    self.memories[cp] = [0,
                     0,
                     0,
                     0]
                    self.memories[cp][0] = 1
                    self.memories[cp][1] = size
                    self.memories[cp][2] = size
                else:
                    self.memories[cp][0] += 1
                    if self.memories[cp][1] > size:
                        self.memories[cp][1] = size
                    if self.memories[cp][2] < size:
                        self.memories[cp][2] = size
        return

    def run(self, cmd):
        sys.setprofile(self.profile)
        try:
            exec cmd
        finally:
            sys.setprofile(None)

        return self


if __name__ == '__main__':
    p = MProfiler()
    p.run("print('hello')")
    print p.memories
