# Python bytecode 2.7 (decompiled from Python 2.7)
# Embedded file name: scripts/common/site-packages/Pympler-0.9/pympler/util/stringutils.py


def safe_repr(obj, clip=None):
    try:
        s = repr(obj)
        if not clip or len(s) <= clip:
            return s
        return s[:clip - 4] + '..' + s[-2:]
    except:
        return 'N/A'


def trunc(obj, max, left=0):
    s = str(obj)
    s = s.replace('\n', '|')
    if len(s) > max:
        if left:
            return '...' + s[len(s) - max + 3:]
        else:
            return s[:max - 3] + '...'
    else:
        return s


def pp(i, base=1024):
    degree = 0
    pattern = '%4d     %s'
    while i > base:
        pattern = '%7.2f %s'
        i = i / float(base)
        degree += 1

    scales = ['B',
     'KB',
     'MB',
     'GB',
     'TB',
     'EB']
    return pattern % (i, scales[degree])


def pp_timestamp(t):
    if t is None:
        return ''
    else:
        h, m, s = int(t / 3600), int(t / 60 % 60), t % 60
        return '%02d:%02d:%05.2f' % (h, m, s)
